{
	"info": {
		"_postman_id": "4220e314-878c-42fa-b36b-a3e9f8f2db00",
		"name": "topcoder-challenge-resource-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Resource Roles",
			"item": [
				{
					"name": "create resource role",
					"item": [
						{
							"name": "create active read only access resource role by admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cb7a7fa3-80d2-4d2a-97a6-558e97041fb4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"COPILOT_RESOURCE_ROLE_ID\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"co-pilot\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": false,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "create inactive full-access resource role by M2M",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8caf10f3-8e53-4e35-83a5-ce4225e5014b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"OBSERVER_RESOURCE_ROLE_ID\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Observer\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": true,\n\t\"isActive\": false,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "create active, read and write access resource role by admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca220ef8-27ac-4ef3-b763-f66c5a3887d1",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"SUBMITTER_RESOURCE_ROLE_ID\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"submitter\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": true,\n\t\"isActive\": true,\n\t\"selfObtainable\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "create reviewer resource role",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "284c6c8a-c7e5-4131-ba30-b07cd404e7be",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"REVIEWER_RESOURCE_ROLE_ID\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"reviewer\",\n\t\"fullReadAccess\": false,\n    \"fullWriteAccess\": false,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource role with invalid parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f19a9655-0688-4912-b2fa-d2b3c669fe66",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"invalid\": \"invalid\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": false,\n\t\"isActive\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource role with missing parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f339ac6a-b858-494e-aede-c5e769ac9a80",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure-test\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource role no token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36a6886b-b3e5-47c2-896b-71301f5fc5b7",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": false,\n\t\"isActive\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource role invalid token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d9433b01-b75e-4d32-898c-daa89d874529",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer invalid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": false,\n\t\"isActive\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource role expire token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "afd35294-3a18-4eea-bf71-725bb4f02dda",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{expire_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": false,\n\t\"isActive\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource role by user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0e91af82-2110-4d79-9b06-9713b2a1b8f3",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": false,\n\t\"isActive\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource role using invalid m2m token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cacaeb82-1ae4-41e7-949b-3c275fc35642",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": false,\n\t\"isActive\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create duplicate resource role 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b61880be-12b5-4e15-a42c-f845b686623d",
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"SUBMITTER\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": false,\n\t\"isActive\": true,\n\t\"selfObtainable\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "get resource roles",
					"item": [
						{
							"name": "get all resource roles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6aacc23b-b91b-48c8-a1da-9a2c3c7ad043",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "get resource role by name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b298d260-2b10-4cbb-9c78-35f18e0e47b8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles?name=Reviewer",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									],
									"query": [
										{
											"key": "name",
											"value": "Reviewer"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get active resource roles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "87e8825e-a0e1-4059-8ba6-b700bbd5d319",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles?isActive=true",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									],
									"query": [
										{
											"key": "isActive",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get inactive resource roles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "52ba1f88-7f91-4101-8f21-e8bb59d15bfb",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles?isActive=false",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									],
									"query": [
										{
											"key": "isActive",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resource roles with invalid parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "98093523-8bd4-4106-b71f-151e85b6e9a6",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles?isActive=invalid",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									],
									"query": [
										{
											"key": "isActive",
											"value": "invalid"
										},
										{
											"key": "invalid",
											"value": "invalid",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resource roles using expire token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "61523250-4acf-486d-af7e-8ef604303aac",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{expire_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles?isActive=true",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									],
									"query": [
										{
											"key": "isActive",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resource roles without token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d116ab18-cc47-44a8-b1cf-2520d17d97a9",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles?isActive=true",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									],
									"query": [
										{
											"key": "isActive",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resource roles using invalid token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b2109b9f-5190-443d-b589-514757a5b82f",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer invalid"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles?isActive=true",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									],
									"query": [
										{
											"key": "isActive",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resource roles using invalid m2m token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "24a733a9-3187-43cb-9c97-e7a89c00e7b6",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles?isActive=true",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									],
									"query": [
										{
											"key": "isActive",
											"value": "true"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "update resource role",
					"item": [
						{
							"name": "failure - update resource role invalid id 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "17b52390-60f1-4365-b8e8-740944ccc7e6",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure-test\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": false,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/test",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"test"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update resource role missing parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "45d0c550-b0aa-4fed-af26-f6300f367af0",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update resource role without token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8bb59ea-f00b-433c-b684-5b4b0ee356ad",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": false,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update resource role invalid token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "228491e4-72d2-48c9-ba82-17bf582a8679",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer invalid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": false,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update resource role expired token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e2ba26ca-a34f-495a-a761-112e1ca15993",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{expire_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": false,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update resource role by user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aef5f4e1-97f7-4df8-8c63-42b752591e98",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": false,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update resource role using invalid m2m token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a44cc37-f3f0-491f-bd01-385744b8a695",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": false,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update resource role not-found 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "769cb23d-00ba-4f7d-9835-5a84db507f32",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure-test\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": false,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{CHALLENGE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{CHALLENGE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update resource role name duplication 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "467fbd81-2923-466d-906e-786ac09f9257",
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{m2m_all_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"SUBMITTER\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": false,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update resource role using m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "953ce406-a554-4710-87fa-dd1a6e691fe7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"UPDATE-CO-PILOT\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": true,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update resource role via admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5e3f7f7d-1176-4231-862d-be65b18c0d67",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"CO-PILOT\",\n\t\"fullReadAccess\": true,\n    \"fullWriteAccess\": true,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Resource Role Phase Dependencies",
			"item": [
				{
					"name": "create dependency",
					"item": [
						{
							"name": "create dependency by admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3ba3a204-2ad3-4736-ac77-aa8bafd02512",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"DEPENDENCY_ID_1\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "create dependency by M2M",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fcc7f082-66fa-4f7a-98be-765e099fa571",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"DEPENDENCY_ID_2\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create dependency with not found phase id 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "875ef910-a757-480c-ad83-51bea42bc8c0",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\",\n\t\"resourceRoleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create dependency with conflict 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f589c0b3-a174-47ab-a60a-cbbbd3ed5139",
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create dependency by user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0d5e34a1-2ec0-4648-800d-f464ba1c895a",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create dependency with expired token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6323fd61-600b-4d4e-b07f-4afe417ec4b3",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{expire_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create dependency without token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "79ddb7af-142a-4c36-ba26-e04a3e1a67b9",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create dependency with invalid body 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "04c35650-71ef-4f62-aae6-bea3bb9443e4",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"abc\",\n\t\"resourceRoleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "76f81880-36b0-409e-8c0e-ff688e76e180",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "cd550f97-32d2-4220-8441-b10213cefa3f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "get dependencies",
					"item": [
						{
							"name": "get all dependencies",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "20bd39d1-eef6-41f9-9655-ce00a225c9e8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "get matched dependencies",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7990a99d-2c13-40e1-9753-5ea49dec2d0f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies?phaseId={{PHASE_ID}}&resourceRoleId={{SUBMITTER_RESOURCE_ROLE_ID}}&phaseState=false",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									],
									"query": [
										{
											"key": "phaseId",
											"value": "{{PHASE_ID}}"
										},
										{
											"key": "resourceRoleId",
											"value": "{{SUBMITTER_RESOURCE_ROLE_ID}}"
										},
										{
											"key": "phaseState",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get dependencies with invalid query 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0a297dcd-5ba0-41ec-bafd-ed20bdeb6ea3",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies?phaseId=abc&resourceRoleId=123&phaseState=abc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									],
									"query": [
										{
											"key": "phaseId",
											"value": "abc"
										},
										{
											"key": "resourceRoleId",
											"value": "123"
										},
										{
											"key": "phaseState",
											"value": "abc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get dependencies with forbidden M2M 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dc4537d7-ec80-47d2-9722-5c5061610ce1",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get dependencies with forbidden user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1edea7c1-c521-472c-83f6-240e0d86ff7c",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b0ebe117-ff1b-40d4-964e-79edf475de13",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "60578d7d-f1cd-47ab-b57d-b0b8ac2da0eb",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "update dependency",
					"item": [
						{
							"name": "update dependency via admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9939790a-9331-47c0-ad48-859247bf5174",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{DEPENDENCY_ID_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{DEPENDENCY_ID_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update dependency via m2m",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a52a3d60-6d4a-468b-a483-759038cbd93e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{DEPENDENCY_ID_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{DEPENDENCY_ID_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update dependency with not found role id 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5047d51e-4848-4395-8487-222a2281d277",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{DEPENDENCY_ID_2}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{DEPENDENCY_ID_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{DEPENDENCY_ID_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update not found dependency 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "20185088-dc5e-4a27-bd2a-54287f754470",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update dependency with invalid body 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c6179d10-63ca-4391-814f-53512458cd7e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"resourceRoleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{DEPENDENCY_ID_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{DEPENDENCY_ID_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update dependency via forbidden m2m 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "98f78bed-3e9c-42c9-8534-72f0cd043692",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{DEPENDENCY_ID_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{DEPENDENCY_ID_1}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cf487aa9-93b4-4cfc-b4e9-810881d1aeaf",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2a201a9a-c917-41d4-92ce-915a7b1048e2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "delete dependency",
					"item": [
						{
							"name": "delete dependency via admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44b6b67a-76fe-4ad8-aa6a-760ee8937eb1",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{DEPENDENCY_ID_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{DEPENDENCY_ID_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete dependency via m2m",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44058474-d0b2-4604-98d5-839ec3c99065",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{DEPENDENCY_ID_2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{DEPENDENCY_ID_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete not found dependency 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee4b409a-f523-44a1-8c04-f0d3bbb7cc5a",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{SUBMITTER_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{SUBMITTER_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete dependency via invalid id 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4af99993-227a-4ad4-8bd5-393946f6f97e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/abc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"abc"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete dependency via forbidden m2m 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "556ef0ca-0c76-485e-ae10-22f83e49cf26",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{DEPENDENCY_ID_2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{DEPENDENCY_ID_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete dependency via forbidden user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8c97f313-2c76-4bd3-8da5-fe45bf4d931c",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{DEPENDENCY_ID_2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{DEPENDENCY_ID_2}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b7f41473-d775-4272-9f59-d165a0727e28",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ceefc87e-8b45-4f6c-a8e2-bf40394d5edf",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6776ec77-db26-4c73-a506-33ccf8d3979c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ce9b86a2-9e3e-4e91-a55e-29c6961bafd7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Resources",
			"item": [
				{
					"name": "create resource",
					"item": [
						{
							"name": "create resource by admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "82ecf77b-c1ee-42ce-b521-db5b253e71e6",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"HoHoSKY\",\n\t\"roleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "create another resource for hohosky",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6a878f42-8f78-4266-9673-922d947e0914",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"HoHoSKY\",\n\t\"roleId\": \"{{REVIEWER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "create resource by user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "50a54b4f-0f8a-4922-9fb1-b7fbd8ab9a22",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"denis\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "create resource using m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f6430ae0-1a8d-4b20-98b9-a9a37b05f08c",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"ghostar\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "create resource for challenge 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8654a3de-859b-4aae-a633-927617b49837",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{TEST_CHALLENGE_ID1}}\",\n\t\"memberHandle\": \"ghostar\",\n\t\"roleId\": \"{{REVIEWER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "create resource for challenge 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1b439548-d7a0-41bd-a8f0-7270e4121c99",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{TEST_CHALLENGE_ID2}}\",\n\t\"memberHandle\": \"ghostar\",\n\t\"roleId\": \"{{REVIEWER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource using inactive role 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e9638d12-8fa5-4fd5-9659-718da388cafc",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"ghostar\",\n\t\"roleId\": \"{{OBSERVER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource using unexisted role 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e64615c-028d-4d56-93e1-e0336cde29ae",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"ghostar\",\n\t\"roleId\": \"{{CHALLENGE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource invalid challengeId 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7270766f-d8da-41f2-bd8f-67c5639c6d5d",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"invalid\",\n\t\"memberHandle\": \"ghostar\",\n\t\"roleId\": \"{{OBSERVER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource invalid parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "058a119b-3c7f-4560-a831-14351feb4ada",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": true,\n\t\"roleId\": \"{{OBSERVER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource member doesn't exist 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "221b1c28-04c9-419d-ae92-1a4de473e4bc",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"123abcx\",\n\t\"roleId\": \"{{OBSERVER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource using invalid token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d5d66aa-ff8b-4e31-852d-55f311bae1f5",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer invalid"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"tonyj\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource using expired token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c90b60-0028-462a-8c36-0ea9764b4e22",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{expire_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"tonyj\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource with invalid user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4f468a08-5dda-446e-b676-16774ba390b3",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"tonyj\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource using invalid m2m token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bd11e2ac-93cb-4c31-9e57-c22fb56c685e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"tonyj\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource for unexisted challenge 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "60db2e07-51a3-4e41-bf46-b8d85a66c782",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_NOT_FOUND_ID}}\",\n\t\"memberHandle\": \"ghostar\",\n\t\"roleId\": \"{{OBSERVER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create duplicate resource 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1f1382c-7c5a-426a-9006-959eef991ba6",
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"HoHoSKY\",\n\t\"roleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create resource challengeId missing 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8b653688-eb5f-481d-89c3-c86a980adb10",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"memberHandle\": \"HoHoSKY\",\n\t\"roleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "create self obtainable resource resource by user itself",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0bfa26ec-7b42-40f6-be15-69027b3cf300",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user3_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"lars2520\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create self obtainable resource resource for other user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa575441-2cfa-4ba1-b250-bad44009d291",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user3_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"thomaskranitsas\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "get resources",
					"item": [
						{
							"name": "get resources by admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "984eb9d3-f950-408b-844e-61958fe69cb2",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/resources?challengeId={{CHALLENGE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									],
									"query": [
										{
											"key": "challengeId",
											"value": "{{CHALLENGE_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get resources by user has full-access permission",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c9eb1189-68be-4c75-9778-cec3b4cebf50",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources?challengeId={{CHALLENGE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									],
									"query": [
										{
											"key": "challengeId",
											"value": "{{CHALLENGE_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get resources using m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cfdb716a-9cd6-4147-8a8a-7178582578af",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources?challengeId={{CHALLENGE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									],
									"query": [
										{
											"key": "challengeId",
											"value": "{{CHALLENGE_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resources invalid challenge id 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "621032e7-dccb-4573-a6ad-06fc24491780",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources?challengeId=invalid",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									],
									"query": [
										{
											"key": "challengeId",
											"value": "invalid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resources using invalid token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "57037df4-c094-4c9d-97c3-93b4ff319ad2",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer invalid"
									}
								],
								"url": {
									"raw": "{{URL}}/resources?challengeId={{CHALLENGE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									],
									"query": [
										{
											"key": "challengeId",
											"value": "{{CHALLENGE_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resources using expire token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "21fce931-9840-4ab6-9f21-929a52e372dd",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{expire_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources?challengeId={{CHALLENGE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									],
									"query": [
										{
											"key": "challengeId",
											"value": "{{CHALLENGE_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resources by user without full-access permission 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "42e3821e-890e-434e-a8ae-1d2ef6ee1eb7",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources?challengeId={{CHALLENGE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									],
									"query": [
										{
											"key": "challengeId",
											"value": "{{CHALLENGE_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resources using invalid m2m token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "718634b1-7557-4fcb-932f-3413858e84ef",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources?challengeId={{CHALLENGE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									],
									"query": [
										{
											"key": "challengeId",
											"value": "{{CHALLENGE_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resources challenge not found 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f06b26b-4630-472a-a6f2-9984f4c9d061",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources?challengeId={{CHALLENGE_NOT_FOUND_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									],
									"query": [
										{
											"key": "challengeId",
											"value": "{{CHALLENGE_NOT_FOUND_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resources challengeId is missing 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b946d6f6-45da-4517-a898-c0e1d5ee2284",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "list challenge by member",
					"item": [
						{
							"name": "get challenges hohosky can access",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e9a08004-e1b8-4ba2-81ab-bb816f36a2ec",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{user1_token}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{user2_token}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin_token}}",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{URL}}/resources/16096823/challenges",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources",
										"16096823",
										"challenges"
									]
								}
							},
							"response": []
						},
						{
							"name": "get challenges ghostar can access",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a2cf4848-a8e0-466c-a9d7-68a5f1cfaf42",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}",
										"disabled": true
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}",
										"disabled": true
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{m2m_read_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/resources/151743/challenges",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources",
										"151743",
										"challenges"
									]
								}
							},
							"response": []
						},
						{
							"name": "get challenges ghostar can access with filter",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8c970a0e-3bf3-4b2d-8316-e49db5f380a8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}",
										"disabled": true
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}",
										"disabled": true
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{URL}}/resources/151743/challenges?resourceRoleId={{REVIEWER_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources",
										"151743",
										"challenges"
									],
									"query": [
										{
											"key": "resourceRoleId",
											"value": "{{REVIEWER_RESOURCE_ROLE_ID}}"
										},
										{
											"key": "resourceRoleId",
											"value": "{{SUBMITTER_RESOURCE_ROLE_ID}}",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get challenges for a non existed user 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fc215944-5683-4ba1-a696-e2a3f5b310de",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources/111111111/challenges",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources",
										"111111111",
										"challenges"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get challenges for user with invalid resourceRoleId filter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3c4b9772-5cfa-4d8d-ac17-568245390248",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources/151743/challenges?resourceRoleId={{TEST_CHALLENGE_ID1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources",
										"151743",
										"challenges"
									],
									"query": [
										{
											"key": "resourceRoleId",
											"value": "{{TEST_CHALLENGE_ID1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure get challenges for user without token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb64ce86-2990-400f-bb39-a10388cf8245",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/resources/16096823/challenges",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources",
										"16096823",
										"challenges"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure get challenges for user using forbidden m2m token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "85544f13-5c94-4a2e-8e0c-fdda47133e1f",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources/16096823/challenges",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources",
										"16096823",
										"challenges"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get challenges memberId incorrect 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bda9b04f-d640-4e2f-a6f1-01ddc0ec5532",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}",
										"disabled": true
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{URL}}/resources/invalid/challenges",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources",
										"invalid",
										"challenges"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get challenges resourceRoleId incorrect 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9389854d-f4f8-46ec-ba06-b696b351b159",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}",
										"disabled": true
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{URL}}/resources/16096823/challenges?resourceRoleId=111111",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources",
										"16096823",
										"challenges"
									],
									"query": [
										{
											"key": "resourceRoleId",
											"value": "111111"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "delete resource",
					"item": [
						{
							"name": "failure - delete resource that user doesn't have 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9abc6b1e-7ff1-4616-9ae4-98d5015b9d7b",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{m2m_modify_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"hohoSKY\",\n\t\"roleId\": \"{{OBSERVER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource invalid challenge id 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "433efe13-eb00-47ca-bf86-db37ae68599e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"invalid\",\n\t\"memberHandle\": \"hohoSKY\",\n\t\"roleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource using unexisted role 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa5a2a45-7a20-4a75-9229-8b441600da6c",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"ghostar\",\n\t\"roleId\": \"{{CHALLENGE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource member doesn't exist 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "670eed47-a699-4c2a-aa7c-6ac0c676d71d",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"123abcx\",\n\t\"roleId\": \"{{OBSERVER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource invalid parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7a52952e-54da-4da5-bb4c-a9225f5a23ab",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": true,\n\t\"roleId\": \"{{OBSERVER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource using invalid token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a36016c0-6955-49be-b560-8b0906a59952",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer invalid"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"tonyj\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource using expired token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6bedf956-11b6-4307-a69f-339f17d759ff",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{expire_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"tonyj\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource with invalid user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af91fa6a-ee62-474d-a1fe-9a75192de257",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"tonyj\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource using invalid m2m token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a6d5447b-5a43-4ea7-b4b1-042da53f5dac",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"tonyj\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource challenge not found 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0c6d9f15-7017-40c2-8073-d1c8aa1c2a41",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_NOT_FOUND_ID}}\",\n\t\"memberHandle\": \"hohoSKY\",\n\t\"roleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete resource using m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d80ed568-ed9a-4122-bdc7-6e297e4092b4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"ghostar\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete resource by user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "80b20480-1202-45a8-bfeb-bfead3aa9c43",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"denis\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete resource by admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f6a283f-84ce-47e1-b02b-b76b842974dd",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"HoHoSKY\",\n\t\"roleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource missing challengeId 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b4db4893-701b-4fd2-8fb0-a40da526cb77",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"memberHandle\": \"HoHoSKY\",\n\t\"roleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete other's self obtainable resource by user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67cc4abc-b98f-48c9-bc14-4a3e2ff341ef",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"lars2520\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete obtainable resource by user itself",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5ebaa610-2635-4f01-a47e-0b325d682246",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user3_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"lars2520\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "health check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/resources/health",
					"host": [
						"{{URL}}"
					],
					"path": [
						"resources",
						"health"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}