{
	"info": {
		"_postman_id": "d6922834-a5b6-4605-8513-d79341277614",
		"name": "topcoder-challenge-resource-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Resource Roles",
			"item": [
				{
					"name": "create resource role",
					"item": [
						{
							"name": "create active full-access resource role by admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7abc7f02-6674-444e-bacc-e174bd3e87cd",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"COPILOT_RESOURCE_ROLE_ID\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"co-pilot\",\n\t\"fullAccess\": true,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "create inactive full-access resource role by M2M",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "01d8dfc5-4f0d-46d9-a780-866054f55820",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"OBSERVER_RESOURCE_ROLE_ID\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Observer\",\n\t\"fullAccess\": true,\n\t\"isActive\": false,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "create active not full-access resource role by admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "98434dbc-7f69-4cd3-8f01-7d57fe4da130",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"SUBMITTER_RESOURCE_ROLE_ID\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"submitter\",\n\t\"fullAccess\": false,\n\t\"isActive\": true,\n\t\"selfObtainable\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "create reviewer resource role",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "133cbd38-2b11-43cd-a03e-0f917504c25c",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"REVIEWER_RESOURCE_ROLE_ID\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"reviewer\",\n\t\"fullAccess\": false,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource role with invalid parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "10d148f9-e0a4-4887-8047-13293ef8a9ff",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"invalid\": \"invalid\",\n\t\"fullAccess\": true,\n\t\"isActive\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource role with missing parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "107c2786-8a2c-481e-b079-169ab2506256",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure-test\",\n\t\"fullAccess\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource role no token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5391eb0-75e4-4640-826e-a6afe33ebb4d",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullAccess\": false,\n\t\"isActive\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource role invalid token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c321c25c-16f6-481b-98d7-45404cccbcc3",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer invalid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullAccess\": false,\n\t\"isActive\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource role expire token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1c7dfa24-205b-4f3e-a07e-ed95c2a7c504",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{expire_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullAccess\": false,\n\t\"isActive\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource role by user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "410046ce-9bd2-4461-8bc4-0a3e546ba8fd",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullAccess\": false,\n\t\"isActive\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource role using invalid m2m token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "705822ac-3bdb-48b5-bf5c-2ff9a8ca0bc9",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullAccess\": false,\n\t\"isActive\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create duplicate resource role 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e70d6ea6-5dab-4526-b78a-9c02165f5a5a",
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"SUBMITTER\",\n\t\"fullAccess\": false,\n\t\"isActive\": true,\n\t\"selfObtainable\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "get resource roles",
					"item": [
						{
							"name": "get all resource roles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2f42ec5d-b0a5-4f05-921b-14f1bfd51d63",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "get resource role by name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "942b43d1-062f-485d-8f27-42c05b6102af",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles?name=Reviewer",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									],
									"query": [
										{
											"key": "name",
											"value": "Reviewer"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get active resource roles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b2986877-6297-4eb7-95ee-4ac8409635d4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles?isActive=true",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									],
									"query": [
										{
											"key": "isActive",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get inactive resource roles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3bc0c6a9-b994-4cb9-93c3-06f4ce5a1384",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles?isActive=false",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									],
									"query": [
										{
											"key": "isActive",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resource roles with invalid parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "41e4fe5e-d148-41e8-9e69-2ce2554abec0",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles?isActive=invalid",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									],
									"query": [
										{
											"key": "isActive",
											"value": "invalid"
										},
										{
											"key": "invalid",
											"value": "invalid",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resource roles using expire token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "137d6eba-ba87-408a-b57a-552d2b3ca55e",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{expire_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles?isActive=true",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									],
									"query": [
										{
											"key": "isActive",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resource roles without token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19481e7b-98ea-4078-a784-5af283555540",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles?isActive=true",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									],
									"query": [
										{
											"key": "isActive",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resource roles using invalid token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4029fb46-768d-48ff-9c82-17c30ab915d8",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer invalid"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles?isActive=true",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									],
									"query": [
										{
											"key": "isActive",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resource roles using invalid m2m token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cb300943-06d5-441c-ab94-dca88d2595a8",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles?isActive=true",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles"
									],
									"query": [
										{
											"key": "isActive",
											"value": "true"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "update resource role",
					"item": [
						{
							"name": "failure - update resource role invalid id 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a1b527f-b95e-47d0-89d4-6af30901cc7e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure-test\",\n\t\"fullAccess\": true,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/test",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"test"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update resource role missing parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e0eb2a7e-c05a-4904-81e2-ea5b147cc703",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update resource role without token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "da305511-c6ba-494c-ad75-af122bbfe030",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullAccess\": true,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update resource role invalid token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56dd5b8c-65ca-4453-b6f6-b2c1a3e5af6c",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer invalid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullAccess\": true,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update resource role expired token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c4b6fc37-d6c9-47e7-8a0c-4ed851855ca4",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{expire_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullAccess\": true,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update resource role by user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4c4275d7-d18e-47cf-be64-8992dd00c612",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullAccess\": true,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update resource role using invalid m2m token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e75efd64-1c6e-4cf8-b3b6-c270c94247e7",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure\",\n\t\"fullAccess\": true,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update resource role not-found 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f6d19c05-c85c-4a4f-a2b7-f1fcd688b4e0",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"failure-test\",\n\t\"fullAccess\": true,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{CHALLENGE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{CHALLENGE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update resource role name duplication 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d0cdf6fd-a66a-40a6-a407-6a37615e70f3",
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{m2m_all_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"SUBMITTER\",\n\t\"fullAccess\": true,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update resource role using m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e5c6052f-7aad-45de-9013-63d4ea3cd24e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"UPDATE-CO-PILOT\",\n\t\"fullAccess\": true,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update resource role via admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cb56046f-4d2c-4b55-b6c7-f6352b6d5811",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"CO-PILOT\",\n\t\"fullAccess\": true,\n\t\"isActive\": true,\n\t\"selfObtainable\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Resource Role Phase Dependencies",
			"item": [
				{
					"name": "create dependency",
					"item": [
						{
							"name": "create dependency by admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "165c7968-a2c0-43fe-9d3d-a787e513b5be",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"DEPENDENCY_ID_1\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "create dependency by M2M",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6443140a-f593-4edf-9b9e-3b39764057c9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"DEPENDENCY_ID_2\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create dependency with not found phase id 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b1a4c522-bc32-43c5-8084-9d0fe54e8a59",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\",\n\t\"resourceRoleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create dependency with conflict 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9b9825d-6ae4-4d98-964b-32c4bf58d2b1",
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create dependency by user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f6535057-44e4-425b-b453-92aba7f90d4c",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create dependency with expired token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f27cef5b-d12f-4619-9061-c27c9671c8bf",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{expire_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create dependency without token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1d57f21e-cecc-4b6a-b519-c154bda0b465",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create dependency with invalid body 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5fd8e604-a734-4de2-96d6-2059a86f1849",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"abc\",\n\t\"resourceRoleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e6920e24-3580-455f-8936-56236a0da88e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d6afbfe5-43d1-4e70-b532-6617438e6cdc",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "get dependencies",
					"item": [
						{
							"name": "get all dependencies",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c4dc00fa-4dc1-4f35-88e1-c0a8eb1b752d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "get matched dependencies",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8fcaef9e-018a-44da-9174-0f839da4b5a0",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies?phaseId={{PHASE_ID}}&resourceRoleId={{SUBMITTER_RESOURCE_ROLE_ID}}&phaseState=false",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									],
									"query": [
										{
											"key": "phaseId",
											"value": "{{PHASE_ID}}"
										},
										{
											"key": "resourceRoleId",
											"value": "{{SUBMITTER_RESOURCE_ROLE_ID}}"
										},
										{
											"key": "phaseState",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get dependencies with invalid query 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "83ed0b45-c1fc-442d-9434-c49cfd11948e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies?phaseId=abc&resourceRoleId=123&phaseState=abc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									],
									"query": [
										{
											"key": "phaseId",
											"value": "abc"
										},
										{
											"key": "resourceRoleId",
											"value": "123"
										},
										{
											"key": "phaseState",
											"value": "abc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get dependencies with forbidden M2M 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "53df2e20-0679-430d-8184-c481854d582a",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get dependencies with forbidden user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6a042c6b-be34-489c-91ff-28be7b2c4d36",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1af474ab-3369-4e00-b5f3-4f313f02aa41",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b718d3bf-29d0-4944-a24d-b435e8912740",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "update dependency",
					"item": [
						{
							"name": "update dependency via admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1b93cfc7-d559-4783-80b3-aecc9f5796c1",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{DEPENDENCY_ID_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{DEPENDENCY_ID_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update dependency via m2m",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "43838526-70ee-4a4e-9255-b9b30438b4f6",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{DEPENDENCY_ID_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{DEPENDENCY_ID_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update dependency with not found role id 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a6767103-b10b-4c1d-8e20-d3bbacb1219c",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{DEPENDENCY_ID_2}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{DEPENDENCY_ID_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{DEPENDENCY_ID_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update not found dependency 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a756b6c-caf1-4dac-ab4e-d3f6578acb0a",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{COPILOT_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{COPILOT_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update dependency with invalid body 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0a0d8145-b378-40fd-8a52-34132e1bfe6d",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"resourceRoleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{DEPENDENCY_ID_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{DEPENDENCY_ID_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - update dependency via forbidden m2m 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9f797918-3cef-4857-a96b-2c9c9a586cce",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"phaseId\": \"{{PHASE_ID}}\",\n\t\"resourceRoleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\",\n\t\"phaseState\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{DEPENDENCY_ID_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{DEPENDENCY_ID_1}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f7350353-f835-4818-a7ae-4f2e78f4ac12",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8c673f03-d84c-4b23-a9a1-593440664240",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "delete dependency",
					"item": [
						{
							"name": "delete dependency via admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5ccd82a2-65c0-4651-832e-5eaa9e20fe59",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{DEPENDENCY_ID_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{DEPENDENCY_ID_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete dependency via m2m",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c8f15067-d05b-4504-bb1a-bbe200c67cba",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{DEPENDENCY_ID_2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{DEPENDENCY_ID_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete not found dependency 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23656b1a-00bd-43da-9998-d47ce682275e",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{SUBMITTER_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{SUBMITTER_RESOURCE_ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete dependency via invalid id 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9d0be0ad-656a-4483-8813-1e7bb7edc0e1",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/abc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"abc"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete dependency via forbidden m2m 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c48a1f28-fd0f-47ab-99ea-ea5869e7f4f7",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{DEPENDENCY_ID_2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{DEPENDENCY_ID_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete dependency via forbidden user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e65a67f1-5937-4704-898e-ac172715673b",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/resource-roles/Phase-dependencies/{{DEPENDENCY_ID_2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resource-roles",
										"Phase-dependencies",
										"{{DEPENDENCY_ID_2}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3252b992-803a-473a-8c5b-8a72061f2fdd",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "edc22690-f2e2-47c9-b6c2-833a72e69d91",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9dbe9703-1f53-44bb-9069-467e4a0c0223",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8dd96a35-73c1-4b0a-beb6-9a2e6fa410ca",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Resources",
			"item": [
				{
					"name": "create resource",
					"item": [
						{
							"name": "create resource by admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "896d81eb-8009-4f0b-98cc-1d6fbbe585ad",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"HoHoSKY\",\n\t\"roleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "create another resource for hohosky",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5a5a37c7-99d7-4763-9224-4c5376b82ba6",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"HoHoSKY\",\n\t\"roleId\": \"{{REVIEWER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "create resource by user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e769aa03-b950-4e7e-9d5b-f6cea9b974ee",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"denis\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "create resource using m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77334cc0-5505-446d-b2f3-71691d22e0ee",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"ghostar\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "create resource for challenge 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "53ab8e46-fcac-4436-967f-646ea0d74f4b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{TEST_CHALLENGE_ID1}}\",\n\t\"memberHandle\": \"ghostar\",\n\t\"roleId\": \"{{REVIEWER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "create resource for challenge 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d1a04ff6-cebf-4b89-92c7-4c3a63a5e7b8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{TEST_CHALLENGE_ID2}}\",\n\t\"memberHandle\": \"ghostar\",\n\t\"roleId\": \"{{REVIEWER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource using inactive role 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2f33b871-030d-47c0-a5c0-531b51f2c541",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"ghostar\",\n\t\"roleId\": \"{{OBSERVER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource using unexisted role 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7faeed99-e342-4d38-b85b-09e9ef94a567",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"ghostar\",\n\t\"roleId\": \"{{CHALLENGE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource invalid challengeId 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c323deeb-23e0-4e0f-b8ac-258d69409f96",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"invalid\",\n\t\"memberHandle\": \"ghostar\",\n\t\"roleId\": \"{{OBSERVER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource invalid parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d1c3e28-313b-4116-bd0a-f55dcb1f34a6",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": true,\n\t\"roleId\": \"{{OBSERVER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource member doesn't exist 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b762b294-16a4-47c4-af41-fa60100d2e5d",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"123abcx\",\n\t\"roleId\": \"{{OBSERVER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource using invalid token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee893984-435e-4a49-9e95-31a50a11cbbe",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer invalid"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"tonyj\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource using expired token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09c241e2-52f8-4f1f-bb3a-56db6df3772a",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{expire_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"tonyj\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource with invalid user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ed7eb642-0444-440b-b5d5-8fdad04bba74",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"tonyj\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource using invalid m2m token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "51ab2161-f498-4c99-b5f8-e46e055203a2",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"tonyj\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create resource for unexisted challenge 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "01e9207d-13c2-4298-ae75-5159b806e9b5",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_NOT_FOUND_ID}}\",\n\t\"memberHandle\": \"ghostar\",\n\t\"roleId\": \"{{OBSERVER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create duplicate resource 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "98c5fe46-b56c-49ff-9366-f747c9c83eb1",
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"HoHoSKY\",\n\t\"roleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create resource challengeId missing 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7ec88cab-302b-40fe-99c1-d4ace71eaaa5",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"memberHandle\": \"HoHoSKY\",\n\t\"roleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "create self obtainable resource resource by user itself",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cd383a49-e72b-4ec0-8178-e6c78736fea1",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user3_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"lars2520\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create self obtainable resource resource for other user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fdea7637-b6d5-4da8-b043-09b96d212db0",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user3_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"thomaskranitsas\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "get resources",
					"item": [
						{
							"name": "get resources by admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aecd7adb-a1ac-4efb-be8a-dc05a7f3b0ba",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/resources?challengeId={{CHALLENGE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									],
									"query": [
										{
											"key": "challengeId",
											"value": "{{CHALLENGE_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get resources by user has full-access permission",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1016d11c-3c53-43a9-9007-de25039ac1e8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources?challengeId={{CHALLENGE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									],
									"query": [
										{
											"key": "challengeId",
											"value": "{{CHALLENGE_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get resources using m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9d12a67f-3693-444f-bb11-36e385eef265",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources?challengeId={{CHALLENGE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									],
									"query": [
										{
											"key": "challengeId",
											"value": "{{CHALLENGE_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resources invalid challenge id 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "73caa036-a1d5-4081-a271-dcb9e5b79ae6",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources?challengeId=invalid",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									],
									"query": [
										{
											"key": "challengeId",
											"value": "invalid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resources using invalid token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e2d4064c-fab4-408e-adf4-07f25ad950a2",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer invalid"
									}
								],
								"url": {
									"raw": "{{URL}}/resources?challengeId={{CHALLENGE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									],
									"query": [
										{
											"key": "challengeId",
											"value": "{{CHALLENGE_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resources using expire token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6390e329-0221-4a33-aa7c-cc8727851153",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{expire_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources?challengeId={{CHALLENGE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									],
									"query": [
										{
											"key": "challengeId",
											"value": "{{CHALLENGE_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resources by user without full-access permission 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0da70e95-4420-45d0-b803-996583fc68b4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources?challengeId={{CHALLENGE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									],
									"query": [
										{
											"key": "challengeId",
											"value": "{{CHALLENGE_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resources using invalid m2m token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "04ad136d-55b5-4b35-8537-a96d341b362d",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources?challengeId={{CHALLENGE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									],
									"query": [
										{
											"key": "challengeId",
											"value": "{{CHALLENGE_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resources challenge not found 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0ea20a6-b21a-40b2-aced-768938c22e8a",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources?challengeId={{CHALLENGE_NOT_FOUND_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									],
									"query": [
										{
											"key": "challengeId",
											"value": "{{CHALLENGE_NOT_FOUND_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get resources challengeId is missing 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1642a568-58c5-40cc-b5cf-cdf69a210bfb",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "list challenge by member",
					"item": [
						{
							"name": "get challenges hohosky can access",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0bec9b7-65c6-4762-aa27-7d358d62522f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{user1_token}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{user2_token}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin_token}}",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{URL}}/resources/16096823/challenges",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources",
										"16096823",
										"challenges"
									]
								}
							},
							"response": []
						},
						{
							"name": "get challenges ghostar can access",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb224dc7-a03e-4f07-8ce9-11ce61ea1e60",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}",
										"disabled": true
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}",
										"disabled": true
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{m2m_read_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/resources/151743/challenges",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources",
										"151743",
										"challenges"
									]
								}
							},
							"response": []
						},
						{
							"name": "get challenges ghostar can access with filter",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2d9ff1fa-5016-48f0-9deb-073e6793a7d6",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}",
										"disabled": true
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}",
										"disabled": true
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{URL}}/resources/151743/challenges?resourceRoleId={{REVIEWER_RESOURCE_ROLE_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources",
										"151743",
										"challenges"
									],
									"query": [
										{
											"key": "resourceRoleId",
											"value": "{{REVIEWER_RESOURCE_ROLE_ID}}"
										},
										{
											"key": "resourceRoleId",
											"value": "{{SUBMITTER_RESOURCE_ROLE_ID}}",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get challenges for a non existed user 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3614d65d-2c88-4875-b285-0818860b70fa",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources/111111111/challenges",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources",
										"111111111",
										"challenges"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get challenges for user with invalid resourceRoleId filter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4eeb32b5-f127-4e95-a651-0c9fc9c713a8",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources/151743/challenges?resourceRoleId={{TEST_CHALLENGE_ID1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources",
										"151743",
										"challenges"
									],
									"query": [
										{
											"key": "resourceRoleId",
											"value": "{{TEST_CHALLENGE_ID1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure get challenges for user without token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5910ab0f-2a7b-460e-9ec0-808c0d0d6d75",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/resources/16096823/challenges",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources",
										"16096823",
										"challenges"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure get challenges for user using forbidden m2m token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e79ca553-fe26-4ad8-a666-69300bd1354d",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"url": {
									"raw": "{{URL}}/resources/16096823/challenges",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources",
										"16096823",
										"challenges"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get challenges memberId incorrect 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88b59718-fb28-44ab-90a2-9ca4947fcf97",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}",
										"disabled": true
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{URL}}/resources/invalid/challenges",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources",
										"invalid",
										"challenges"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get challenges resourceRoleId incorrect 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e267d456-05d1-42b6-b1e2-edd9c8c5429f",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}",
										"disabled": true
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{URL}}/resources/16096823/challenges?resourceRoleId=111111",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources",
										"16096823",
										"challenges"
									],
									"query": [
										{
											"key": "resourceRoleId",
											"value": "111111"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "delete resource",
					"item": [
						{
							"name": "failure - delete resource that user doesn't have 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0962e44a-1c57-45b6-ab3a-8873feaa6d90",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{m2m_modify_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"hohoSKY\",\n\t\"roleId\": \"{{OBSERVER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource invalid challenge id 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e33100b-5052-4ac1-a50e-b6ca752389f9",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"invalid\",\n\t\"memberHandle\": \"hohoSKY\",\n\t\"roleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource using unexisted role 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0bf900ac-8feb-4bd0-91a2-cbe40f8e7c22",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"ghostar\",\n\t\"roleId\": \"{{CHALLENGE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource member doesn't exist 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c5f42133-3d44-487d-943d-6edb21155b19",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"123abcx\",\n\t\"roleId\": \"{{OBSERVER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource invalid parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "42cbb65f-5571-4379-aa82-0a172541cb63",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": true,\n\t\"roleId\": \"{{OBSERVER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource using invalid token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b47f3a87-da2f-4130-9117-e0a7a6b9a96b",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer invalid"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"tonyj\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource using expired token 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7baff3e-7a21-444b-895d-f3dc38df59f4",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{expire_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"tonyj\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource with invalid user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf7f2024-b29a-4ad3-9101-5ff7f3609f5d",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user1_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"tonyj\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource using invalid m2m token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4dc86712-320f-45ed-a7d1-2d927cec5057",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_read_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"tonyj\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource challenge not found 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "51fc26a6-f2f7-49e6-bca4-e5b7350e7ef9",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_modify_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_NOT_FOUND_ID}}\",\n\t\"memberHandle\": \"hohoSKY\",\n\t\"roleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete resource using m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3b21d06e-5b63-4f90-9a4f-b4b038027b9f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_all_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"ghostar\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete resource by user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c51df82f-64d5-4d4c-bdd5-155321488010",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"denis\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete resource by admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cbb2f5df-9af8-4859-ac78-0db44b624608",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"HoHoSKY\",\n\t\"roleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete resource missing challengeId 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7161af1b-9c98-4540-a295-71b45a419b6a",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"memberHandle\": \"HoHoSKY\",\n\t\"roleId\": \"{{COPILOT_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete other's self obtainable resource by user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4888f223-9817-4d6a-bbd8-ae9ddd9f33c8",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"lars2520\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete obtainable resource by user itself",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "abf48083-0c7a-4b13-921b-67d1ce05f34a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user3_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challengeId\": \"{{CHALLENGE_ID}}\",\n\t\"memberHandle\": \"lars2520\",\n\t\"roleId\": \"{{SUBMITTER_RESOURCE_ROLE_ID}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resources"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "health check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/resources/health",
					"host": [
						"{{URL}}"
					],
					"path": [
						"resources",
						"health"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}